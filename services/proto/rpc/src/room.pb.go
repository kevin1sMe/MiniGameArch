// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/room.proto

package naruto

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
)

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RoomList struct {
	RoomList             []*Room  `protobuf:"bytes,1,rep,name=roomList,proto3" json:"roomList,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoomList) Reset()         { *m = RoomList{} }
func (m *RoomList) String() string { return proto.CompactTextString(m) }
func (*RoomList) ProtoMessage()    {}
func (*RoomList) Descriptor() ([]byte, []int) {
	return fileDescriptor_edf28055a1e21422, []int{0}
}

func (m *RoomList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoomList.Unmarshal(m, b)
}
func (m *RoomList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoomList.Marshal(b, m, deterministic)
}
func (m *RoomList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomList.Merge(m, src)
}
func (m *RoomList) XXX_Size() int {
	return xxx_messageInfo_RoomList.Size(m)
}
func (m *RoomList) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomList.DiscardUnknown(m)
}

var xxx_messageInfo_RoomList proto.InternalMessageInfo

func (m *RoomList) GetRoomList() []*Room {
	if m != nil {
		return m.RoomList
	}
	return nil
}

type RoomRequest struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoomRequest) Reset()         { *m = RoomRequest{} }
func (m *RoomRequest) String() string { return proto.CompactTextString(m) }
func (*RoomRequest) ProtoMessage()    {}
func (*RoomRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_edf28055a1e21422, []int{1}
}

func (m *RoomRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoomRequest.Unmarshal(m, b)
}
func (m *RoomRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoomRequest.Marshal(b, m, deterministic)
}
func (m *RoomRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomRequest.Merge(m, src)
}
func (m *RoomRequest) XXX_Size() int {
	return xxx_messageInfo_RoomRequest.Size(m)
}
func (m *RoomRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RoomRequest proto.InternalMessageInfo

func (m *RoomRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type Room struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Size                 uint32   `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Type                 uint32   `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Room) Reset()         { *m = Room{} }
func (m *Room) String() string { return proto.CompactTextString(m) }
func (*Room) ProtoMessage()    {}
func (*Room) Descriptor() ([]byte, []int) {
	return fileDescriptor_edf28055a1e21422, []int{2}
}

func (m *Room) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Room.Unmarshal(m, b)
}
func (m *Room) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Room.Marshal(b, m, deterministic)
}
func (m *Room) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Room.Merge(m, src)
}
func (m *Room) XXX_Size() int {
	return xxx_messageInfo_Room.Size(m)
}
func (m *Room) XXX_DiscardUnknown() {
	xxx_messageInfo_Room.DiscardUnknown(m)
}

var xxx_messageInfo_Room proto.InternalMessageInfo

func (m *Room) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Room) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Room) GetSize() uint32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Room) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func init() {
	proto.RegisterType((*RoomList)(nil), "naruto.RoomList")
	proto.RegisterType((*RoomRequest)(nil), "naruto.RoomRequest")
	proto.RegisterType((*Room)(nil), "naruto.Room")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RoomServiceClient is the client API for RoomService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RoomServiceClient interface {
	GetRoom(ctx context.Context, in *RoomRequest, opts ...grpc.CallOption) (*Room, error)
}

type roomServiceClient struct {
	cc *grpc.ClientConn
}

func NewRoomServiceClient(cc *grpc.ClientConn) RoomServiceClient {
	return &roomServiceClient{cc}
}

func (c *roomServiceClient) GetRoom(ctx context.Context, in *RoomRequest, opts ...grpc.CallOption) (*Room, error) {
	out := new(Room)
	err := c.cc.Invoke(ctx, "/naruto.RoomService/GetRoom", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RoomServiceServer is the server API for RoomService service.
type RoomServiceServer interface {
	GetRoom(context.Context, *RoomRequest) (*Room, error)
}

func RegisterRoomServiceServer(s *grpc.Server, srv RoomServiceServer) {
	s.RegisterService(&_RoomService_serviceDesc, srv)
}

func _RoomService_GetRoom_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoomRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoomServiceServer).GetRoom(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/naruto.RoomService/GetRoom",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoomServiceServer).GetRoom(ctx, req.(*RoomRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RoomService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "naruto.RoomService",
	HandlerType: (*RoomServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetRoom",
			Handler:    _RoomService_GetRoom_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/room.proto",
}

func init() { proto.RegisterFile("proto/room.proto", fileDescriptor_edf28055a1e21422) }

var fileDescriptor_edf28055a1e21422 = []byte{
	// 197 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x8f, 0x41, 0x8b, 0xc2, 0x30,
	0x10, 0x85, 0x37, 0x6d, 0xb7, 0xdb, 0x9d, 0xee, 0x2e, 0x4b, 0xbc, 0x04, 0x41, 0x28, 0x39, 0xe5,
	0x14, 0xa1, 0x7a, 0xf5, 0xec, 0xc5, 0x53, 0xfc, 0x05, 0xd5, 0xce, 0x21, 0x87, 0x36, 0x35, 0x4d,
	0x05, 0xfd, 0xf5, 0x92, 0x44, 0xc4, 0xde, 0x3e, 0xbe, 0x79, 0xf0, 0xde, 0xc0, 0xff, 0x60, 0x8d,
	0x33, 0x6b, 0x6b, 0x4c, 0x27, 0x03, 0xd2, 0xbc, 0x6f, 0xec, 0xe4, 0x0c, 0xdf, 0x42, 0xa1, 0x8c,
	0xe9, 0x0e, 0x7a, 0x74, 0x54, 0x40, 0x61, 0x9f, 0xcc, 0x48, 0x95, 0x8a, 0xb2, 0xfe, 0x91, 0x31,
	0x26, 0x7d, 0x46, 0xbd, 0xae, 0x7c, 0x05, 0x65, 0x30, 0x78, 0x99, 0x70, 0x74, 0xf4, 0x0f, 0x12,
	0xdd, 0x32, 0x52, 0x11, 0xf1, 0xa9, 0x12, 0xdd, 0x72, 0x05, 0x99, 0x3f, 0xbf, 0xf9, 0x5f, 0xef,
	0x29, 0x85, 0xac, 0x6f, 0x3a, 0x64, 0x49, 0x45, 0xc4, 0xb7, 0x0a, 0xec, 0xdd, 0xa8, 0xef, 0xc8,
	0xd2, 0x90, 0x0a, 0xec, 0x9d, 0xbb, 0x0d, 0xc8, 0xb2, 0xe8, 0x3c, 0xd7, 0xbb, 0x58, 0x79, 0x44,
	0x7b, 0xd5, 0x67, 0xa4, 0x12, 0xbe, 0xf6, 0xe8, 0x42, 0xcb, 0x62, 0x36, 0x32, 0x4e, 0x5a, 0xce,
	0x96, 0xf3, 0x8f, 0x53, 0x1e, 0xde, 0xde, 0x3c, 0x02, 0x00, 0x00, 0xff, 0xff, 0x51, 0x62, 0xe3,
	0x33, 0x0a, 0x01, 0x00, 0x00,
}
